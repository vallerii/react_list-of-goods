{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","alphabeticallySort","setState","ALPABET","lengtSort","LENGTH","reverse","prevstate","reset","reorderedGoods","goods","visibleGoods","sort","goodsA","goodsB","length","localeCompare","getReorderedGoods","this","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,UAAY,WACV,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAC1BT,YAAaS,EAAUT,gBAhB7B,EAoBEU,MAAQ,WACN,EAAKN,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,IAAMW,EA3DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAgBC,GACjC,OAAQf,GACN,KAAKL,EAASW,OACZ,OAAOQ,EAAOE,OAASD,EAAOC,OAChC,KAAKrB,EAASS,QACZ,OAAOU,EAAOG,cAAcF,GAC9B,QACE,OAAO,MAIThB,GACFa,EAAaL,UAGRK,EAqCkBM,CAAkBtB,EAAiBuB,KAAKrB,OAE/D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYH,KAAKrB,MAAME,WAAaL,EAASS,UAEjDmB,QAASJ,KAAKjB,mBANhB,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYH,KAAKrB,MAAME,WAAaL,EAASW,SAEjDiB,QAASJ,KAAKd,UANhB,4BAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaH,KAAKrB,MAAMC,aAE5BwB,QAASJ,KAAKZ,QANhB,sBAWEY,KAAKrB,MAAME,WAAaL,EAASM,MAAQkB,KAAKrB,MAAMC,aAEpD,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKV,MAHhB,sBAUJ,6BACE,6BACGC,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,kBAjFlC,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.432e2769.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodsA: string, goodsB: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return goodsA.length - goodsB.length;\n      case SortType.ALPABET:\n        return goodsA.localeCompare(goodsB);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  alphabeticallySort = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  lengtSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(prevstate => ({\n      isReversed: !prevstate.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPABET },\n            )}\n            onClick={this.alphabeticallySort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={this.lengtSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}